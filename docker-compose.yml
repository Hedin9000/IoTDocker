version: "3.0"
services:
  # System
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:2.11.1-alpine #last version: portainer/portainer-ce:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_volume:/data
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    networks:
      - iot_network
    environment:
      - TZ=Europe/Moscow

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    restart: always
    ports:
      - "8081:80"
    volumes:
      - filebrowser_volume:/data
      - influxdb_data_volume:/data/share/influxdb_data_volume
      - influxdb_config_volume:/data/share/influxdb_config_volume
      - mosquitto_data_volume:/data/share/mosquitto_data_volume
      - mosquitto_config_volume:/data/share/mosquitto_config_volume
      - mosquitto2_data_volume:/data/share/mosquitto2_data_volume
      - mosquitto2_config_volume:/data/share/mosquitto2_config_volume
      - nodered_volume:/data/share/nodered_volume
      - zigbee2mqtt_volume:/data/share/zigbee2mqtt_volume
      - homeassistant_volume:/data/share/homeassistant_volume
      - esphome_volume:/data/share/esphome_volume
    networks:
      - iot_network
    environment:
      - TZ=Europe/Moscow
    command:  ["--root=/data/share", "--address=0.0.0.0", "--database=/data/filebrowser.db", "--config=/data/config.json"]

      
  #Tools
  # chronograf:
    # container_name: chronograf
    # image: chronograf:1.8.8-alpine #last version: chronograf:latest
    # restart: always
    # volumes:
      # - chronograf_volume:/var/lib/chronograf
    # ports:
      # - 8888:8888
    # networks:
      # - iot_network
    # depends_on:
      # - influxdb
    # environment:
      # - TZ=Europe/Moscow

  zigbee2mqttAssistant:
    image: carldebilly/zigbee2mqttassistant:0.3.181-linux-x64 #last version: carldebilly/zigbee2mqttassistant:linux-arm64
    container_name: zigbee2mqttAssistant
    env_file:
      - zigbee2mqttAssistant.env
    ports:
      - 8880:80
    restart: always
    depends_on:
      - eclipse-mosquitto
    networks:
      - iot_network

  #IoT Services
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:2022.7 #last version: homeassistant/home-assistant:latest
    volumes:
      - homeassistant_volume:/config/
    ports:
      - "8123:8123"
      - "8300:8300"
    restart: always
    networks:
      iot_network:
        aliases:
          - homeassistant
    environment:
      - TZ=Europe/Moscow

  # influxdb:
  #   container_name: influxdb
  #   image: influxdb:2.2 #last version: influxdb:latest
  #   restart: always
  #   env_file:
  #     - influxdb.env
  #   volumes:
  #     - influxdb_data_volume:/var/lib/influxdb2
  #     - influxdb_config_volume:/etc/influxdb2
  #   ports:
  #     - 8086:8086 
  #   networks:
  #     iot_network:
  #       aliases:
  #         - influxdb
  
  # telegraf:
  #   image: telegraf:1.22
  #   restart: always
  #   # environment:
  #   #   HOST_PROC: /rootfs/proc
  #   #   HOST_SYS: /rootfs/sys
  #   #   HOST_ETC: /rootfs/etc
  #   hostname: localhost
  #   ports:
  #     - 8125:8125 #statsD
  #     - 8092:8092 #upd
  #     - 8094:8094 #tcp
  #   volumes:
  #    - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
  #   #  - /var/run/docker.sock:/var/run/docker.sock:ro
  #   #  - /sys:/rootfs/sys:ro
  #   #  - /proc:/rootfs/proc:ro
  #   #  - /etc:/rootfs/etc:ro
  #   networks:
  #     iot_network:
  #       aliases:
  #         - telegraf

  eclipse-mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:2.0.14 #last version: eclipse-mosquitto:latest
    restart: always
    volumes:
      - mosquitto2_data_volume:/mosquitto/data
      - mosquitto2_config_volume:/mosquitto/config
    ports:
      - 1883:1883
    networks:
      iot_network:
        aliases:
          - mqtt
    environment:
      - TZ=Europe/Moscow

  node-red:
    container_name: nodered
    image: nodered/node-red:3.0.2 #last version: nodered/node-red:latest
    environment:
      - TZ=Europe/Moscow
    ports:
      - "1880:1880"
    networks:
      iot_network:
        aliases:
          - nodered
    user: root
    volumes:
      - nodered_volume:/data
    privileged: true
    devices: 
      - /dev/ttyUSB0:/dev/ttyUSB0

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:1.16.1 #last version: koenkk/zigbee2mqtt:latest
    volumes:
      - zigbee2mqtt_volume:/app/data
      - /run/udev:/run/udev:ro #  is optional, only required for autodetecting the port
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    restart: always
    networks:
      iot_network:
        aliases:
          - zigbee2mqtt
    privileged: true
    depends_on:
      - eclipse-mosquitto
    environment:
      - TZ=Europe/Moscow

  esphome:
    container_name: esphome
    image: esphome/esphome:2022.3.0
    volumes:
      - esphome_volume:/config:rw
      # Use local time for logging timestamps
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "6052:6052"
    network_mode: host
    restart: always
    # devices:
      # - /dev/ttyUSB1:/dev/ttyUSB1
volumes:
  # System
  portainer_volume:
  # Tools
  #chronograf_volume:
  filebrowser_volume:
  # IoT Services  
  influxdb_data_volume:
  influxdb_config_volume:
  mosquitto_data_volume:
  mosquitto_config_volume:
  mosquitto2_data_volume:
  mosquitto2_config_volume:
  nodered_volume:
  zigbee2mqtt_volume:
  homeassistant_volume:
  esphome_volume:

networks:
  iot_network:
    driver: bridge
